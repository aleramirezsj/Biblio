// <auto-generated />
using System;
using Backend.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.Migrations
{
    [DbContext(typeof(BiblioContext))]
    partial class BiblioContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Service.Models.Autor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Autores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Nombre = "Gabriel García Márquez"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Nombre = "Isabel Allende"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Nombre = "Mario Vargas Llosa"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Nombre = "Jorge Luis Borges"
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            Nombre = "Laura Esquivel"
                        },
                        new
                        {
                            Id = 6,
                            IsDeleted = false,
                            Nombre = "Carlos Fuentes"
                        },
                        new
                        {
                            Id = 7,
                            IsDeleted = false,
                            Nombre = "Julio Cortázar"
                        },
                        new
                        {
                            Id = 8,
                            IsDeleted = false,
                            Nombre = "Miguel de Cervantes"
                        },
                        new
                        {
                            Id = 9,
                            IsDeleted = false,
                            Nombre = "Pablo Neruda"
                        },
                        new
                        {
                            Id = 10,
                            IsDeleted = false,
                            Nombre = "Octavio Paz"
                        });
                });

            modelBuilder.Entity("Service.Models.Carrera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Carreras");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Nombre = "Ingeniería Informática"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Nombre = "Derecho"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Nombre = "Medicina"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Nombre = "Psicología"
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            Nombre = "Arquitectura"
                        },
                        new
                        {
                            Id = 6,
                            IsDeleted = false,
                            Nombre = "Administración"
                        },
                        new
                        {
                            Id = 7,
                            IsDeleted = false,
                            Nombre = "Contabilidad"
                        },
                        new
                        {
                            Id = 8,
                            IsDeleted = false,
                            Nombre = "Educación"
                        },
                        new
                        {
                            Id = 9,
                            IsDeleted = false,
                            Nombre = "Biología"
                        },
                        new
                        {
                            Id = 10,
                            IsDeleted = false,
                            Nombre = "Física"
                        });
                });

            modelBuilder.Entity("Service.Models.Editorial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Editoriales");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Nombre = "Penguin Random House"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Nombre = "HarperCollins"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Nombre = "Simon & Schuster"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Nombre = "Hachette Book Group"
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            Nombre = "Macmillan Publishers"
                        },
                        new
                        {
                            Id = 6,
                            IsDeleted = false,
                            Nombre = "Scholastic"
                        },
                        new
                        {
                            Id = 7,
                            IsDeleted = false,
                            Nombre = "Bloomsbury Publishing"
                        },
                        new
                        {
                            Id = 8,
                            IsDeleted = false,
                            Nombre = "Oxford University Press"
                        },
                        new
                        {
                            Id = 9,
                            IsDeleted = false,
                            Nombre = "Cambridge University Press"
                        },
                        new
                        {
                            Id = 10,
                            IsDeleted = false,
                            Nombre = "Wiley"
                        });
                });

            modelBuilder.Entity("Service.Models.Ejemplar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Disponible")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LibroId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LibroId");

                    b.ToTable("Ejemplares");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Disponible = true,
                            Estado = 0,
                            IsDeleted = false,
                            LibroId = 1
                        },
                        new
                        {
                            Id = 2,
                            Disponible = true,
                            Estado = 1,
                            IsDeleted = false,
                            LibroId = 2
                        },
                        new
                        {
                            Id = 3,
                            Disponible = true,
                            Estado = 2,
                            IsDeleted = false,
                            LibroId = 3
                        },
                        new
                        {
                            Id = 4,
                            Disponible = true,
                            Estado = 3,
                            IsDeleted = false,
                            LibroId = 4
                        },
                        new
                        {
                            Id = 5,
                            Disponible = true,
                            Estado = 4,
                            IsDeleted = false,
                            LibroId = 5
                        },
                        new
                        {
                            Id = 6,
                            Disponible = true,
                            Estado = 0,
                            IsDeleted = false,
                            LibroId = 6
                        },
                        new
                        {
                            Id = 7,
                            Disponible = true,
                            Estado = 1,
                            IsDeleted = false,
                            LibroId = 7
                        },
                        new
                        {
                            Id = 8,
                            Disponible = true,
                            Estado = 2,
                            IsDeleted = false,
                            LibroId = 8
                        },
                        new
                        {
                            Id = 9,
                            Disponible = true,
                            Estado = 3,
                            IsDeleted = false,
                            LibroId = 9
                        },
                        new
                        {
                            Id = 10,
                            Disponible = true,
                            Estado = 4,
                            IsDeleted = false,
                            LibroId = 10
                        });
                });

            modelBuilder.Entity("Service.Models.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Generos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Nombre = "Ficción"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Nombre = "No Ficción"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Nombre = "Misterio"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Nombre = "Romance"
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            Nombre = "Ciencia Ficción"
                        },
                        new
                        {
                            Id = 6,
                            IsDeleted = false,
                            Nombre = "Fantasia"
                        },
                        new
                        {
                            Id = 7,
                            IsDeleted = false,
                            Nombre = "Historia"
                        },
                        new
                        {
                            Id = 8,
                            IsDeleted = false,
                            Nombre = "Biografía"
                        },
                        new
                        {
                            Id = 9,
                            IsDeleted = false,
                            Nombre = "Poesía"
                        },
                        new
                        {
                            Id = 10,
                            IsDeleted = false,
                            Nombre = "Drama"
                        });
                });

            modelBuilder.Entity("Service.Models.Libro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnioPublicacion")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("EditorialId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Paginas")
                        .HasColumnType("int");

                    b.Property<string>("Portada")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Sinopsis")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("EditorialId");

                    b.ToTable("Libros");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnioPublicacion = 1967,
                            Descripcion = "Novela emblemática",
                            EditorialId = 1,
                            IsDeleted = false,
                            Paginas = 471,
                            Portada = "portada1.jpg",
                            Sinopsis = "La historia de la familia Buendía.",
                            Titulo = "Cien años de soledad"
                        },
                        new
                        {
                            Id = 2,
                            AnioPublicacion = 1982,
                            Descripcion = "Realismo mágico chileno",
                            EditorialId = 2,
                            IsDeleted = false,
                            Paginas = 368,
                            Portada = "portada2.jpg",
                            Sinopsis = "Saga familiar de los Trueba.",
                            Titulo = "La casa de los espíritus"
                        },
                        new
                        {
                            Id = 3,
                            AnioPublicacion = 1969,
                            Descripcion = "Corrupción y dictadura",
                            EditorialId = 3,
                            IsDeleted = false,
                            Paginas = 601,
                            Portada = "portada3.jpg",
                            Sinopsis = "La vida bajo la dictadura de Odría.",
                            Titulo = "Conversación en La Catedral"
                        },
                        new
                        {
                            Id = 4,
                            AnioPublicacion = 1923,
                            Descripcion = "Poesía argentina",
                            EditorialId = 4,
                            IsDeleted = false,
                            Paginas = 120,
                            Portada = "portada4.jpg",
                            Sinopsis = "Primer libro de Borges.",
                            Titulo = "Fervor de Buenos Aires"
                        },
                        new
                        {
                            Id = 5,
                            AnioPublicacion = 1989,
                            Descripcion = "Novela de realismo mágico",
                            EditorialId = 5,
                            IsDeleted = false,
                            Paginas = 256,
                            Portada = "portada5.jpg",
                            Sinopsis = "La historia de Tita y su cocina.",
                            Titulo = "Como agua para chocolate"
                        },
                        new
                        {
                            Id = 6,
                            AnioPublicacion = 1962,
                            Descripcion = "Novela mexicana",
                            EditorialId = 6,
                            IsDeleted = false,
                            Paginas = 336,
                            Portada = "portada6.jpg",
                            Sinopsis = "La vida de Artemio Cruz.",
                            Titulo = "La muerte de Artemio Cruz"
                        },
                        new
                        {
                            Id = 7,
                            AnioPublicacion = 1963,
                            Descripcion = "Novela experimental",
                            EditorialId = 7,
                            IsDeleted = false,
                            Paginas = 736,
                            Portada = "portada7.jpg",
                            Sinopsis = "La vida de Horacio Oliveira.",
                            Titulo = "Rayuela"
                        },
                        new
                        {
                            Id = 8,
                            AnioPublicacion = 1605,
                            Descripcion = "Clásico español",
                            EditorialId = 8,
                            IsDeleted = false,
                            Paginas = 863,
                            Portada = "portada8.jpg",
                            Sinopsis = "Las aventuras de Don Quijote.",
                            Titulo = "Don Quijote de la Mancha"
                        },
                        new
                        {
                            Id = 9,
                            AnioPublicacion = 1924,
                            Descripcion = "Poesía chilena",
                            EditorialId = 9,
                            IsDeleted = false,
                            Paginas = 64,
                            Portada = "portada9.jpg",
                            Sinopsis = "Poemas de amor de Neruda.",
                            Titulo = "Veinte poemas de amor"
                        },
                        new
                        {
                            Id = 10,
                            AnioPublicacion = 1950,
                            Descripcion = "Ensayo mexicano",
                            EditorialId = 10,
                            IsDeleted = false,
                            Paginas = 228,
                            Portada = "portada10.jpg",
                            Sinopsis = "Reflexión sobre la identidad mexicana.",
                            Titulo = "El laberinto de la soledad"
                        });
                });

            modelBuilder.Entity("Service.Models.LibroAutor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AutorId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LibroId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AutorId");

                    b.HasIndex("LibroId");

                    b.ToTable("LibroAutores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AutorId = 1,
                            IsDeleted = false,
                            LibroId = 1
                        },
                        new
                        {
                            Id = 2,
                            AutorId = 2,
                            IsDeleted = false,
                            LibroId = 2
                        },
                        new
                        {
                            Id = 3,
                            AutorId = 3,
                            IsDeleted = false,
                            LibroId = 3
                        },
                        new
                        {
                            Id = 4,
                            AutorId = 4,
                            IsDeleted = false,
                            LibroId = 4
                        },
                        new
                        {
                            Id = 5,
                            AutorId = 5,
                            IsDeleted = false,
                            LibroId = 5
                        },
                        new
                        {
                            Id = 6,
                            AutorId = 6,
                            IsDeleted = false,
                            LibroId = 6
                        },
                        new
                        {
                            Id = 7,
                            AutorId = 7,
                            IsDeleted = false,
                            LibroId = 7
                        },
                        new
                        {
                            Id = 8,
                            AutorId = 8,
                            IsDeleted = false,
                            LibroId = 8
                        },
                        new
                        {
                            Id = 9,
                            AutorId = 9,
                            IsDeleted = false,
                            LibroId = 9
                        },
                        new
                        {
                            Id = 10,
                            AutorId = 10,
                            IsDeleted = false,
                            LibroId = 10
                        });
                });

            modelBuilder.Entity("Service.Models.LibroGenero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GeneroId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LibroId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GeneroId");

                    b.HasIndex("LibroId");

                    b.ToTable("LibroGeneros");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GeneroId = 1,
                            IsDeleted = false,
                            LibroId = 1
                        },
                        new
                        {
                            Id = 2,
                            GeneroId = 2,
                            IsDeleted = false,
                            LibroId = 2
                        },
                        new
                        {
                            Id = 3,
                            GeneroId = 3,
                            IsDeleted = false,
                            LibroId = 3
                        },
                        new
                        {
                            Id = 4,
                            GeneroId = 4,
                            IsDeleted = false,
                            LibroId = 4
                        },
                        new
                        {
                            Id = 5,
                            GeneroId = 5,
                            IsDeleted = false,
                            LibroId = 5
                        },
                        new
                        {
                            Id = 6,
                            GeneroId = 6,
                            IsDeleted = false,
                            LibroId = 6
                        },
                        new
                        {
                            Id = 7,
                            GeneroId = 7,
                            IsDeleted = false,
                            LibroId = 7
                        },
                        new
                        {
                            Id = 8,
                            GeneroId = 8,
                            IsDeleted = false,
                            LibroId = 8
                        },
                        new
                        {
                            Id = 9,
                            GeneroId = 9,
                            IsDeleted = false,
                            LibroId = 9
                        },
                        new
                        {
                            Id = 10,
                            GeneroId = 10,
                            IsDeleted = false,
                            LibroId = 10
                        });
                });

            modelBuilder.Entity("Service.Models.Prestamo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EjemplarId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaDevolucion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaPrestamo")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EjemplarId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Prestamos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EjemplarId = 1,
                            FechaDevolucion = new DateTime(2023, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaPrestamo = new DateTime(2023, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 2,
                            EjemplarId = 2,
                            FechaDevolucion = new DateTime(2023, 2, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaPrestamo = new DateTime(2023, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 3,
                            EjemplarId = 3,
                            FechaDevolucion = new DateTime(2023, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaPrestamo = new DateTime(2023, 2, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 4,
                            EjemplarId = 4,
                            FechaDevolucion = new DateTime(2023, 2, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaPrestamo = new DateTime(2023, 2, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 5,
                            EjemplarId = 5,
                            FechaDevolucion = new DateTime(2023, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaPrestamo = new DateTime(2023, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UsuarioId = 5
                        },
                        new
                        {
                            Id = 6,
                            EjemplarId = 6,
                            FechaDevolucion = new DateTime(2023, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaPrestamo = new DateTime(2023, 2, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UsuarioId = 6
                        },
                        new
                        {
                            Id = 7,
                            EjemplarId = 7,
                            FechaDevolucion = new DateTime(2023, 2, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaPrestamo = new DateTime(2023, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UsuarioId = 7
                        },
                        new
                        {
                            Id = 8,
                            EjemplarId = 8,
                            FechaDevolucion = new DateTime(2023, 2, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaPrestamo = new DateTime(2023, 2, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UsuarioId = 8
                        },
                        new
                        {
                            Id = 9,
                            EjemplarId = 9,
                            FechaDevolucion = new DateTime(2023, 2, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaPrestamo = new DateTime(2023, 2, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UsuarioId = 9
                        },
                        new
                        {
                            Id = 10,
                            EjemplarId = 10,
                            FechaDevolucion = new DateTime(2023, 2, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaPrestamo = new DateTime(2023, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UsuarioId = 10
                        });
                });

            modelBuilder.Entity("Service.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Domicilio")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaRegistracion")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TipoRol")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Dni = "10000001",
                            Domicilio = "Calle 1",
                            Email = "juan1@mail.com",
                            FechaRegistracion = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Nombre = "Juan Pérez",
                            Observacion = "",
                            Password = "pass1",
                            Telefono = "1111111",
                            TipoRol = 0
                        },
                        new
                        {
                            Id = 2,
                            Dni = "10000002",
                            Domicilio = "Calle 2",
                            Email = "ana2@mail.com",
                            FechaRegistracion = new DateTime(2023, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Nombre = "Ana Gómez",
                            Observacion = "",
                            Password = "pass2",
                            Telefono = "2222222",
                            TipoRol = 1
                        },
                        new
                        {
                            Id = 3,
                            Dni = "10000003",
                            Domicilio = "Calle 3",
                            Email = "luis3@mail.com",
                            FechaRegistracion = new DateTime(2023, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Nombre = "Luis Torres",
                            Observacion = "",
                            Password = "pass3",
                            Telefono = "3333333",
                            TipoRol = 2
                        },
                        new
                        {
                            Id = 4,
                            Dni = "10000004",
                            Domicilio = "Calle 4",
                            Email = "maria4@mail.com",
                            FechaRegistracion = new DateTime(2023, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Nombre = "María López",
                            Observacion = "",
                            Password = "pass4",
                            Telefono = "4444444",
                            TipoRol = 0
                        },
                        new
                        {
                            Id = 5,
                            Dni = "10000005",
                            Domicilio = "Calle 5",
                            Email = "pedro5@mail.com",
                            FechaRegistracion = new DateTime(2023, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Nombre = "Pedro Ruiz",
                            Observacion = "",
                            Password = "pass5",
                            Telefono = "5555555",
                            TipoRol = 1
                        },
                        new
                        {
                            Id = 6,
                            Dni = "10000006",
                            Domicilio = "Calle 6",
                            Email = "lucia6@mail.com",
                            FechaRegistracion = new DateTime(2023, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Nombre = "Lucía Fernández",
                            Observacion = "",
                            Password = "pass6",
                            Telefono = "6666666",
                            TipoRol = 0
                        },
                        new
                        {
                            Id = 7,
                            Dni = "10000007",
                            Domicilio = "Calle 7",
                            Email = "carlos7@mail.com",
                            FechaRegistracion = new DateTime(2023, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Nombre = "Carlos Díaz",
                            Observacion = "",
                            Password = "pass7",
                            Telefono = "7777777",
                            TipoRol = 2
                        },
                        new
                        {
                            Id = 8,
                            Dni = "10000008",
                            Domicilio = "Calle 8",
                            Email = "sofia8@mail.com",
                            FechaRegistracion = new DateTime(2023, 1, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Nombre = "Sofía Ramírez",
                            Observacion = "",
                            Password = "pass8",
                            Telefono = "8888888",
                            TipoRol = 0
                        },
                        new
                        {
                            Id = 9,
                            Dni = "10000009",
                            Domicilio = "Calle 9",
                            Email = "miguel9@mail.com",
                            FechaRegistracion = new DateTime(2023, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Nombre = "Miguel Castro",
                            Observacion = "",
                            Password = "pass9",
                            Telefono = "9999999",
                            TipoRol = 1
                        },
                        new
                        {
                            Id = 10,
                            Dni = "10000010",
                            Domicilio = "Calle 10",
                            Email = "elena10@mail.com",
                            FechaRegistracion = new DateTime(2023, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Nombre = "Elena Vargas",
                            Observacion = "",
                            Password = "pass10",
                            Telefono = "10101010",
                            TipoRol = 0
                        });
                });

            modelBuilder.Entity("Service.Models.UsuarioCarrera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarreraId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarreraId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuarioCarreras");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarreraId = 1,
                            IsDeleted = false,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 2,
                            CarreraId = 2,
                            IsDeleted = false,
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 3,
                            CarreraId = 3,
                            IsDeleted = false,
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 4,
                            CarreraId = 4,
                            IsDeleted = false,
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 5,
                            CarreraId = 5,
                            IsDeleted = false,
                            UsuarioId = 5
                        },
                        new
                        {
                            Id = 6,
                            CarreraId = 6,
                            IsDeleted = false,
                            UsuarioId = 6
                        },
                        new
                        {
                            Id = 7,
                            CarreraId = 7,
                            IsDeleted = false,
                            UsuarioId = 7
                        },
                        new
                        {
                            Id = 8,
                            CarreraId = 8,
                            IsDeleted = false,
                            UsuarioId = 8
                        },
                        new
                        {
                            Id = 9,
                            CarreraId = 9,
                            IsDeleted = false,
                            UsuarioId = 9
                        },
                        new
                        {
                            Id = 10,
                            CarreraId = 10,
                            IsDeleted = false,
                            UsuarioId = 10
                        });
                });

            modelBuilder.Entity("Service.Models.Ejemplar", b =>
                {
                    b.HasOne("Service.Models.Libro", "Libro")
                        .WithMany()
                        .HasForeignKey("LibroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Libro");
                });

            modelBuilder.Entity("Service.Models.Libro", b =>
                {
                    b.HasOne("Service.Models.Editorial", "Editorial")
                        .WithMany()
                        .HasForeignKey("EditorialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Editorial");
                });

            modelBuilder.Entity("Service.Models.LibroAutor", b =>
                {
                    b.HasOne("Service.Models.Autor", "Autor")
                        .WithMany()
                        .HasForeignKey("AutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Service.Models.Libro", "Libro")
                        .WithMany()
                        .HasForeignKey("LibroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autor");

                    b.Navigation("Libro");
                });

            modelBuilder.Entity("Service.Models.LibroGenero", b =>
                {
                    b.HasOne("Service.Models.Genero", "Genero")
                        .WithMany()
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Service.Models.Libro", "Libro")
                        .WithMany()
                        .HasForeignKey("LibroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genero");

                    b.Navigation("Libro");
                });

            modelBuilder.Entity("Service.Models.Prestamo", b =>
                {
                    b.HasOne("Service.Models.Ejemplar", "Ejemplar")
                        .WithMany()
                        .HasForeignKey("EjemplarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Service.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ejemplar");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Service.Models.UsuarioCarrera", b =>
                {
                    b.HasOne("Service.Models.Carrera", "Carrera")
                        .WithMany()
                        .HasForeignKey("CarreraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Service.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrera");

                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
